<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title><![CDATA[拾句-丧]]></title>
    <url>%2Fposts%2F60ae6d78%2F</url>
    <content type="text"><![CDATA[可能会太丧，不建议一次性食用，千万不要贪杯哦~别人都祝你快乐，我只愿你，遍历山河，觉得人间值得。——夫禾《禾叔的杂货铺》我希望她三十岁没嫁，我也不希望她三十岁没嫁。——网易云音乐《三十岁的女人》热评我从未拥有过你一秒钟，心里却失去过你千万次。——网易云音乐《再见二丁目》热评慢慢大家会明白的，互相喜欢的两个人无法在一起，其实是人生的常态。———网易云《三角题》热评不在一起就不在一起吧，反正一辈子也没多长。——网易云音乐《关于郑州的记忆》热评多数人25岁就死了，但直到75岁才埋。——网易云音乐《杀死那个石家庄人》热评电影太仁慈，总能让错过的人重新相遇，生活不一样，有些人说过再见就再也不见了。——出处不详她的手只有我的手四分之三那么大，可我还是没能抓住。——网易云音乐《一生所爱》热评那时候没有手机没有网络，只能通过书信来往，才会有这样依依不舍，现在的人很难感受到那种离别后再无音讯的难舍了。——网易云音乐《离别的车站》热评希望我是一个让你心动的人，而不是权衡取舍分析利弊后，觉得不错的人。——出处不详——《成全》你总想依赖别人，到最后，你会发现人生的每一个最艰难时刻，都是自己挺过来的。这里是我的心，奇迹般万物生长，后来你来这儿走了一遭，这里荒芜寸草不生死亡，仿佛水消失在水中。自杀，也是一种变相的对自我的执着。希望每个感觉在黑暗里往下沉的人，都能找到再浮起来的力量。善良长不出牙齿，就是软弱。我有抑郁症，所以就去死一死，没什么重要的原因，大家不必在意我的离开。——微博用户走饭你没有如期归来，而这正是离别的意义。——北岛《白日梦》生活真的好累，可我又不能去死吧，那些难捱的事情还得咬咬牙挺过去，不管过程怎么艰难，努力点总比碌碌无为要来的好吧。——出处不详你没有如期归来，而这正是离别的意义。——北岛《白日梦》小时候真傻，居然盼着长大。—— 丰子恺你长大了，就要做好每个人都会离开的准备 。——出处不详张三丰瞧着郭襄的遗书，眼前似乎又看到了那个明慧潇洒的少女，可是，那是一百年前的事了。——金庸或许我的心包有一层硬壳，能破壳而入的东西是极其有限的。所以我才不能对人一往情深。——村上春树《挪威的森林》热闹是他们的，我什么都没有。——朱自清哪里会有人喜欢孤独，不过是不喜欢失望罢了。——村上春树《挪威的森林》现代人的崩溃，是一种很安静的崩溃，看起来特别正常。会说笑，会打闹，会社会，表面很平静，实际心情已经糟到一定程度了。但不会骂人，不会砸东西，更不会哭。就算有那么一刻，达到所能承受的极限了，也只是不说话，不会真的崩溃，就是不太想活，却也不敢去死。——出处不详我以前以为秘密不能说，现在才知道难过也不能说。——出处不详后来我终于知道，它并不是我的花，我只是恰好途径了它的盛放。——出处不详世间所有的爱都指向团聚，唯有父母的爱指向别离。——出处不详我今年十八岁，如果身体健康，没有飞来横祸，我还可以活四十年，五十年，六十年，但我可能再也见不到她了，而我又只有这么一辈子。——出处不详生活从来不会招招手说，“小子过来我们讲讲道理”，生活只会一个大嘴巴把你打在地上后说，“傻逼，学着点。”——出处不详希望你能明白，那些离开了你的人，不管当时是出于什么原因离开，也许彷徨过犹豫过挣扎不舍过。但至少，在他决定要走的那个瞬间，他觉得没有你，他会过得更好。——出处不详生活中尽是瑕疵，大多平淡。——沃梓基天堂和地狱都太过分了，人们的行为不值得那么多。前已无通路，后不见归途。敌视现实，虚构远方。东张西望，一无所长。四体不勤，五谷不分。文不能测字，武不能防身——《十万嬉皮》领导看的是结果，不看过程，这个社会也是。你不愿意种花，你说，我不愿看见它一点点凋落。是的，为了避免结束，你避免了一切开始。——顾城《避免》太年轻了，还没成为想成为的样子，所以也没有时间遇上共度余生的人。从没和你一起坐过飞机，总是一个人坐飞机跑来找你，再一个人坐飞机回去。我一生未做坏事，为何这样？——张国荣那一刻你心里有场海啸，可你静静地，没有让任何人知道。——独木舟葛婉仪我其实刻薄，不擅温言宽慰，惰于交流，说着说着便沉默。往往疏离，孤独执着。我在自己周围筑起高墙，没有哪个人能够入内，也尽量不放自己出去。——村上春树 《海边的卡夫卡》我的不幸，恰恰在于我缺乏拒绝的能力。我害怕一旦拒绝别人，便会在彼此心里留下永远无法愈合的裂痕。——太宰治《人间失格》好想抱一抱每一个因为敏感而变得小心翼翼的人，我懂得他们内心的善良，亦知晓他们的可贵。(优先考虑哪些优先考虑你的人)有的人就是会天生自我厌恶，我非常清楚自己就是那种表面看的过去，各方面普普通通，有点小特长，坐在人群里不至于太扎眼，实际上非常糟糕的人。很多时候做给别人看，有时候甚至卑劣到做给自己看。每次想要对别人说明这一点的时候，大家总是好心安慰:不是的，你很好呀。不是这样的，我一点也不好，你不明白。你走了真好，不然总担心你要走。对于丑人，细看是种残忍。被人指出丑陋之处的滋味并不好受。坦然地剥开自己并不容易。很难过的是，我所认真重视对待的其实并没有人关心，我所渴望被理解的、努力倾诉希望有人愿意懂得的，其实并没有人真正去倾听。我喜爱很多事物，却唯独讨厌自己。哪有什么不合适，无非就是腻了，倦了，权衡利弊之后懒得爱了，想遇见比你更好的人了。以后的以后，多点自知之明，少点自作多情。我最信任的人，教会我不要信任何人。有些事情做不完，就留到明天做吧！運氣好的話，明天死了就不用做了。其实不想丧的，但真的不快乐。生活到底对你们做了什么，不敢再尝试，不敢再用力爱，不敢再探索。你以为那是成熟，我认为那叫死了。人生这么短，我要和像我喜欢你一样喜欢我的人一起过。少吃兩口飯我都做不到，怎麼可能說不喜歡就不喜歡呢？]]></content>
      <categories>
        <category>拾句</category>
      </categories>
      <tags>
        <tag>丧</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[volatile关键字]]></title>
    <url>%2Fposts%2Fce0f712d%2F</url>
    <content type="text"><![CDATA[本文最初来源，在此基础上做了部分修改、调整。liuxiaopengJava 并发编程：volatile的使用及其原理volatile作用在《Java并发编程：核心理论》一文中，我们已经提到过可见性、有序性及原子性问题，通常情况下我们可以通过Synchronized关键字来解决这些个问题，不过如果对Synchronized原理有了解的话，应该知道Synchronized是一个比较重量级的操作，对系统的性能有比较大的影响，所以，如果有其他解决方案，我们通常都避免使用Synchronized来解决问题。而volatile关键字就是Java中提供的另一种解决可见性和有序性问题的方案。对于原子性，需要强调一点，也是大家容易误解的一点：对volatile变量的单次读/写操作可以保证原子性的，如long和double类型变量，但是并不能保证i++这种操作的原子性，因为本质上i++是读、写两次操作。volatile使用场景防止重排序我们从一个最经典的例子来分析重排序问题。大家应该都很熟悉单例模式的实现，而在并发环境下的单例实现方式，我们通常可以采用双重检查加锁（DCL）的方式来实现。其源码如下：1234567891011121314151617public class Singleton &#123; public static volatile Singleton singleton; /** * 构造函数私有，禁止外部实例化 */ private Singleton() &#123;&#125;; public static Singleton getInstance() &#123; if (singleton == null) &#123; synchronized (Singleton.class) &#123; if (singleton == null) &#123; singleton = new Singleton(); &#125; &#125; &#125; return singleton; &#125;&#125;现在我们分析一下为什么要在变量singleton之前加上volatile关键字。要理解这个问题，先要了解对象的构造过程，实例化一个对象其实可以分为三个步骤： 1. 分配内存空间。 2. 初始化对象。 3. 将内存空间的地址赋值给对应的引用。但是由于操作系统可以对指令进行重排序，所以上面的过程也可能会变成如下过程： 1. 分配内存空间。 2. 将内存空间的地址赋值给对应的引用。 3. 初始化对象 如果是这个流程，多线程环境下就可能将一个未初始化的对象引用暴露出来，从而导致不可预料的结果。因此，为了防止这个过程的重排序，我们需要将变量设置为volatile类型的变量。实现可见性可见性问题主要指一个线程修改了共享变量值，而另一个线程却看不到。引起可见性问题的主要原因是每个线程拥有自己的一个高速缓存区——线程工作内存。volatile关键字能有效的解决这个问题，我们看下下面的例子，就可以知道其作用：12345678910111213141516171819202122232425262728293031323334353637public class VolatileTest &#123; int a = 1; int b = 2; public void change() &#123; a = 3; b = a; &#125; public void print() &#123; System.out.println(&quot;b=&quot; + b + &quot;;a=&quot; + a); &#125; public static void main(String[] args) &#123; while (true) &#123; final VolatileTest test = new VolatileTest(); new Thread(() -&gt; &#123; try &#123; Thread.sleep(10); &#125; catch (InterruptedException e) &#123; e.printStackTrace(); &#125; test.change(); &#125;).start(); new Thread(() -&gt; &#123; try &#123; Thread.sleep(10); &#125; catch (InterruptedException e) &#123; e.printStackTrace(); &#125; test.print(); &#125;).start(); &#125; &#125;&#125;直观上说，这段代码的结果只可能有两种：b=3;a=3 或 b=2;a=1。不过运行上面的代码（可能时间上要长一点），你会发现除了上两种结果之外，还出现了第三种结果：为什么会出现b=3;a=1这种结果呢？正常情况下，如果先执行change方法，再执行print方法，输出结果应该为b=3;a=3。相反，如果先执行的print方法，再执行change方法，结果应该是 b=2;a=1。那b=3;a=1的结果是怎么出来的？原因就是第一个线程将值a=3修改后，但是对第二个线程是不可见的，所以才出现这一结果。如果将a和b都改成volatile类型的变量再执行，则再也不会出现b=3;a=1的结果了。保证原子性volatile只能保证对单次读/写的原子性。这个问题可以看下JLS中的描述：17.7 Non-Atomic Treatment of double and longFor the purposes of the Java programming language memory model, a single write to a non-volatile long or double value is treated as two separate writes: one to each 32-bit half. This can result in a situation where a thread sees the first 32 bits of a 64-bit value from one write, and the second 32 bits from another write.Writes and reads of volatile long and double values are always atomic.Writes to and reads of references are always atomic, regardless of whether they are implemented as 32-bit or 64-bit values.Some implementations may find it convenient to divide a single write action on a 64-bit long or double value into two write actions on adjacent 32-bit values. For efficiency’s sake, this behavior is implementation-specific; an implementation of the Java Virtual Machine is free to perform writes to long and double values atomically or in two parts.Implementations of the Java Virtual Machine are encouraged to avoid splitting 64-bit values where possible. Programmers are encouraged to declare shared 64-bit values as volatile or synchronize their programs correctly to avoid possible complications.long和double两种数据类型的操作可分为高32位和低32位两部分，因此普通的long或double类型读/写可能不是原子的。因此，鼓励大家将共享的long和double变量设置为volatile类型，这样能保证任何情况下对long和double的单次读/写操作都具有原子性。关于volatile变量对原子性保证，有一个问题容易被误解。现在我们就通过下列程序来演示一下这个问题：12345678910111213141516171819202122public class VolatileTest &#123; volatile int i; public void addI() &#123; i++; &#125; public static void main(String[] args) throws InterruptedException &#123; final VolatileTest test01 = new VolatileTest(); for (int n = 0; n &lt; 1000; n++) &#123; new Thread(() -&gt; &#123; try &#123; Thread.sleep(10); &#125; catch (InterruptedException e) &#123; e.printStackTrace(); &#125; test01.addI(); &#125;).start(); &#125; Thread.sleep(10000);//等待10秒，保证上面程序执行完成 System.out.println(test01.i); &#125;&#125;大家可能会误认为对变量i加上关键字volatile后，这段程序就是线程安全的。大家可以尝试运行上面的程序。下面是我本地运行的结果：12993Process finished with exit code 0可能每个人运行的结果不相同。不过应该能看出，volatile是无法保证原子性的（否则结果应该是1000）。原因也很简单，i++其实是一个复合操作，包括三步骤： 1. 读取i的值。 2. 对i加1。 3. 将i的值写回内存。volatile是无法保证这三个操作是具有原子性的，我们可以通过AtomicInteger或者synchronized来保证+1操作的原子性，以下代码为使用AtomicInteger对应的实现。12345678910111213141516171819202122public class VolatileTest &#123; AtomicInteger i = new AtomicInteger(0); public void addI() &#123; i.getAndAdd(1); &#125; public static void main(String[] args) throws InterruptedException &#123; final VolatileTest test01 = new VolatileTest(); for (int n = 0; n &lt; 1000; n++) &#123; new Thread(() -&gt; &#123; try &#123; Thread.sleep(10); &#125; catch (InterruptedException e) &#123; e.printStackTrace(); &#125; test01.addI(); &#125;).start(); &#125; Thread.sleep(10000);//等待10秒，保证上面程序执行完成 System.out.println(test01.i.intValue()); &#125;&#125;注：上面几段代码中多处执行了Thread.sleep()方法，目的是为了增加并发问题的产生几率，无其他作用。volatile原理通过上面的例子，我们基本应该知道了volatile是什么以及怎么使用。现在我们再来看看volatile的底层是怎么实现的。可见性实现在前文中已经提及过，线程本身并不直接与主内存进行数据的交互，而是通过线程的工作内存来完成相应的操作。这也是导致线程间数据不可见的本质原因。因此要实现volatile变量的可见性，直接从这方面入手即可。对volatile变量的写操作与普通变量的主要区别有两点： （1）修改volatile变量时会强制将修改后的值刷新的主内存中。 （2）修改volatile变量后会导致其他线程工作内存中对应的变量值失效。因此，再读取该变量值的时候就需要重新从读取主内存中的值。 通过这两个操作，就可以解决volatile变量的可见性问题。有序性实现在解释这个问题前，我们先来了解一下Java中的happen-before规则，JSR 133中对Happen-before的定义如下：Two actions can be ordered by a happens-before relationship.If one action happens before another, then the first is visible to and ordered before the second. 通俗一点说就是如果a happen-before b，则a所做的任何操作对b是可见的。（这一点大家务必记住，因为happen-before这个词容易被误解为是时间的前后）。我们再来看看JSR 133中定义了哪些happen-before规则：• Each action in a thread happens before every subsequent action in that thread.• An unlock on a monitor happens before every subsequent lock on that monitor.• A write to a volatile field happens before every subsequent read of that volatile.• A call to start() on a thread happens before any actions in the started thread.• All actions in a thread happen before any other thread successfully returns from a join() on that thread.• If an action a happens before an action b, and b happens before an action c, then a happens before c. 翻译过来为：同一个线程中的，前面的操作 happen-before 后续的操作。（即单线程内按代码顺序执行。但是，在不影响在单线程环境执行结果的前提下，编译器和处理器可以进行重排序，这是合法的。换句话说，这一是规则无法保证编译重排和指令重排）。监视器上的解锁操作 happen-before 其后续的加锁操作。（Synchronized 规则）对volatile变量的写操作 happen-before 后续的读操作。（volatile 规则）线程的start() 方法 happen-before 该线程所有的后续操作。（线程启动规则）线程所有的操作 happen-before 其他线程在该线程上调用 join 返回成功后的操作。如果 a happen-before b，b happen-before c，则a happen-before c（传递性）。 这里我们主要看下第三条：volatile变量的保证有序性的规则。《Java并发编程：核心理论》一文中提到过重排序分为编译器重排序和处理器重排序。为了实现volatile内存语义，JMM会对volatile变量限制这两种类型的重排序。下面是JMM针对volatile变量所规定的重排序规则表：Can Reorder2nd operation1st operationNormal Load Normal StoreVolatile LoadVolatile StoreNormal Load Normal StoreNoVolatile LoadNoNoNoVolatile storeNoNo内存屏障为了实现volatile可见性和happen-befor的语义。JVM底层是通过一个叫做“内存屏障”的东西来完成。内存屏障，也叫做内存栅栏，是一组处理器指令，用于实现对内存操作的顺序限制。下面是完成上述规则所要求的内存屏障：Required barriers2nd operation1st operationNormal LoadNormal StoreVolatile LoadVolatile StoreNormal LoadLoadStoreNormal StoreStoreStoreVolatile LoadLoadLoadLoadStoreLoadLoadLoadStoreVolatile StoreStoreLoadStoreStore（1）LoadLoad 屏障执行顺序：Load1—&gt;Loadload—&gt;Load2确保Load2及后续Load指令加载数据之前能访问到Load1加载的数据。（2）StoreStore 屏障执行顺序：Store1—&gt;StoreStore—&gt;Store2确保Store2以及后续Store指令执行前，Store1操作的数据对其它处理器可见。（3）LoadStore 屏障执行顺序： Load1—&gt;LoadStore—&gt;Store2确保Store2和后续Store指令执行前，可以访问到Load1加载的数据。（4）StoreLoad 屏障执行顺序: Store1—&gt; StoreLoad—&gt;Load2确保Load2和后续的Load指令读取之前，Store1的数据对其他处理器是可见的。最后我可以通过一个实例来说明一下JVM中是如何插入内存屏障的：12345678910111213141516171819202122232425public class MemoryBarrier &#123; int a, b; volatile int v, u; void f() &#123; int i, j; i = a; j = b; i = v; //LoadLoad j = u; //LoadStore a = i; b = j; //StoreStore v = i; //StoreStore u = j; //StoreLoad i = u; //LoadLoad //LoadStore j = b; a = i; &#125;&#125;总结总体上来说volatile的理解还是比较困难的，如果不是特别理解，也不用急，完全理解需要一个过程，在后续的文章中也还会多次看到volatile的使用场景。这里暂且对volatile的基础知识和原来有一个基本的了解。总体来说，volatile是并发编程中的一种优化，在某些场景下可以代替Synchronized。但是，volatile的不能完全取代Synchronized的位置，只有在一些特殊的场景下，才能适用volatile。总的来说，必须同时满足下面两个条件才能保证在并发环境的线程安全： 1. 对变量的写操作不依赖于当前值。 2. 该变量没有包含在具有其他变量的不变式中。]]></content>
      <categories>
        <category>Java关键字</category>
      </categories>
      <tags>
        <tag>volatile</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[拾句-爱]]></title>
    <url>%2Fposts%2F497a5083%2F</url>
    <content type="text"><![CDATA[星河滚烫，你是人间理想。水中月是天上月，眼前人是心上人。你自月中来，星飒云中雾。情不知所起，一往而深。——汤显祖《牡丹亭》不多不多，以后还可以少吃一点。——三毛为你，千千万万遍。——卡勒德·胡赛尼月亮很亮，亮也没用，没用也亮。我喜欢你，喜欢也没用，没用也喜欢。 ——李诞她可以褪色，可以枯萎，怎样都可以，但我只要看她一眼，万般柔情，涌上心头。——《洛丽塔》别惊动我爱的人，等他自己情愿。——《圣经》斯人如彩虹，遇上方知有。世上本无圣诞老人，所有礼物和惊喜都来自爱你的人。我这个人啊，满身阴暗，还总想着给你一点阳光。我想变得有趣，变得特别，变成你眼里的一点星光。世界没有你想象的那么坏，你过来，来我身边，我抱你。昨天很喜欢你，今天也很喜欢你，而且预感，明天也会很喜欢你。这里荒芜寸草不生，后来你来这儿走了一遭，奇迹般万物生长，这里是我的心。这个世界上有六十几亿人口，但某个瞬间，只这一个人，就能敌过千军万马，四海潮生。喜欢啊，是清风，是朝露，是脸颊红红，是千千万万人里，心里除了你再也装不下其它。不奢望永远，所以，爱一天，珍惜一天。深情但不纠缠。人一大，碰到真心喜欢的人，第一感觉是害怕，还有自卑。真心说出的不一定是真话，那是情话。月遇从云，花遇和风，今晚上的夜空很美，我又想你。 ——太宰治就算世界荒芜，总有一个人，他会是你的信徒。 ——独木舟《深海里的星星》朝暮与年岁并往，然后与你一同行至天光。 ——河唐先生《天光》草在结它的种子，风在摇它的叶子，我们站着，不说话，就十分美好。——顾城《门前》余生不用多指教，我都听你的就是了。因为你，我愿意成为一个更好的人。纵然，从此一别两宽，各自欢喜，你也曾写进了他的生命里，虽非经久不衰，却最浓墨重彩。藏不住的喜欢，理直气壮就好了。我喜欢你，甚于昨日，略匮明朝。特别喜欢你朝我走过来的样子，不过我很紧张，心砰砰地跳。你要做个可爱的姑娘，不烦世事，满心欢喜。我站在哪都可以，可以站在你前面，保护你；也可以站在你后面，撑起你；也可以站在你旁边，与你并肩(也可以站得远远的，远离你)。世界并不会对你温柔以待，上帝也不会对你特殊照顾，但是，我会呀。一生太短，所以遇到喜欢的人，就要认真喜欢。外面风大，我带你回家。想陪你一起无所事事。我这个人超级好的，你可以放心喜欢。你回头。还有我呢！你最可爱！今晚月色真美！上来吧，我背你！哈哈哈，你也是个普通人，和我一样。我寻了半生的春天，你一笑便是了。我一点也不想你，一点半再想。我想和你在一起，几天也好。在某个地方，某个时辰。 ——杜拉斯陌上开花，可缓缓归矣。玲珑骰子安红豆，入骨相思君知否。此情无计可消除，才下眉头，却上心头。春风十里不如你。愿得一心人，白首莫相离。情不知所起，一往而深。但愿人长久，千里共婵娟。人生若只如初见。今夕何夕，见此良人。只一眼，便千秋万世。何烦五色药，尊下即丹丘。愿你垂垂老矣，我可明我心。所爱隔山海，山海皆可平。身无彩凤双飞翼，心有灵犀一点通。世间安得双全法，不负如来不负卿说的是一辈子！差一年，一个月，一天，一个时辰，都不算一辈子！——《霸王别姬》如果再也看不到你，祝你早安，午安，晚安。——《楚门的世界》如果她打你，一定要装得很痛；如果真的很痛，要装得没事。——《我的野蛮女友》到你是我人生的一大收获。我不道别，也不跟你约定，我想我们一定能再见面的。——《东京爱情故事》我这一生都是坚定不移的唯物主义者，唯有你，我希望有来生。–《周恩来家书》醒来觉得甚是爱你。——朱生豪《朱生豪情书》我并没有喜欢哪一种类型的人 。如果我喜欢你，我喜欢的就只是你。——蔡康永答案很长，我准备用一生的时间来回答，你准备要听了吗？——林徽因人间烟火，山河远阔。无一是你，无一不是你。若逢新雪初霁/满月当空/下面平铺着皓影/上面流转着亮银/而你带笑地向我步来/月色与雪色之间/你是第三种绝色——余光中 《绝色》这黑灯瞎火的，我贼他妈想你。]]></content>
      <categories>
        <category>拾句</category>
      </categories>
      <tags>
        <tag>爱</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[拾句-惊艳]]></title>
    <url>%2Fposts%2F922764cc%2F</url>
    <content type="text"><![CDATA[说书唱戏劝人方，三条大路走中央。善恶到头终有报，人间正道是沧桑。—— 单口相声定场诗曾以为走不出的日子，现在都回不去了。——村上春树长大了，总有那么一两次，你会为重视的人奔跑，因为是对的人，走路真的来不及。没事，只不过是恢复原状罢了，我本来就是一无所有的。——濑川初原《食灵零》能够说出的委屈，便不算委屈；能够抢走的爱人，便不算爱人。——亦舒《开到荼蘼》有人一看书就卖弄，多看几本吧，多看几本就不卖弄了。——木心你如果认识从前的我，也许你会原谅现在的我。——张爱玲《倾城之恋》希望你明白，我凡事都看得开，但并不影响我记仇。我们奋力前行，逆水行舟，被不断向后推，直至回到往昔岁月。——《了不起的盖茨比》人生天地之间，若白驹之过隙，忽然而已。——庄周逝者如斯夫，不舍昼夜。——《论语·子罕》贫穷的思维，是造成贫穷的真正原因。每一个不曾起舞的日子，都是对生命的辜负。——尼采敬这大争之世，敬这小酌之时。长大是人必经的溃烂。——塞林格远方除了遥远一无所有。——海子我妈曾经说过一句话：即使你躺倒让别人踩在你身上走，别人还是会抱怨你踩着不够舒服。所以，不用试着让所有人都开心，过好你自己的生活。张华考上了北京大学，李萍进了中等技术学校，我在百货公司当售货员，我们都有光明的前途。——新华字典1998修订本”前途“一词的例句少年的肩膀，就该这样才对嘛，什么家国仇恨，浩然正气的，都不要急，先挑起清风明月、杨柳依依和草长莺飞，少年郎的肩头，本就应当满是美好的事物啊。——烽火戏诸侯《剑来》女孩，晚安，你要早睡，才会有一天找到另一个也喜欢早睡的男孩，拥抱着你入睡，在你耳边呢喃一句晚安。只有孤独的灵魂，才会越晚越清醒。女孩，你听到吗，晚安。——阿句句《全世界失眠》想生个女儿，头发顺长，肉薄心窄，眼神忧郁。用牛奶，豆浆，米汤和可口可乐浇灌，一二十年后长成祸水。——冯唐《北京北京》有朝一日会成为被喜欢的人觉得大吃一惊，被讨厌的人刮目相看的人——网易云热评你对纹身的女人怎么看？你对她有偏见？我喜欢的女性是多元的，拒绝“女人就应该活成女人的样子”“年纪这么大了，还这么有少女感”“女人过了多少岁就没价值了，类似这样的话。我认真对待我自己，认真对待年龄留下的饱满痕迹，我所有的经历构造了现在的我，我无需被其他定义，无需被教导成“女孩应该有的样子”我只是我而已。也没有什么热衷的东西，感觉追不上就悄悄走开了。生活没那么复杂，种豆子和相思或许都得瓜。你敢试，世界就敢答 。有时候你问的问题对方一直在闪躲，那就是在委婉地告诉你，真实的回答很残忍。你必须只有内心丰富，才能摆脱这些生活表面的相似。贪安稳就没有自由，要自由就要历些危险。只有这两条路。鲁迅不能听命于自己者，就要受命于他人。——尼采《查特拉斯如是说》若是看到自己周围一群拙劣的追随者以及同伴，首要的正确反省是：自己做得还不够卓越。幸运的人一生都被童年治愈，不幸的人一生都在治愈童年。她那时候还太年轻，不知道所有命运馈赠的礼物，早已经在暗中标好了价格。——《断头王后》单是聪明还不够，还应有足够的聪明以避免过度聪明。——莫洛瓦我们始终有一种错觉，以为我们的感情源自于我们自己的内心。——古斯塔夫·勒庞 《乌合之众》人一到群体中，智商就严重降低，为了获得认同，个体愿意抛弃是非，用智商去换取那份让人倍感安全的归属感。——古斯塔夫·勒庞 《乌合之众》没有人帮你，说明你一个人可以。我要再和生活死磕几年。要么我就毁灭，要么我就注定铸就辉煌。如果有一天，你发现我在平庸面前低了头，请向我开炮。——杰克·凯鲁亚克《在路上》正因为众人畏惧死亡，死亡这个事件里，意外率先完成的人，往往被迫伟大。与其互为人间，不如自成宇宙。希望每个感觉在黑暗里往下沉的人，都能找到再浮起来的力量。因为拥有过的很少，所以根本学不会断舍离，生活里一切鸡毛蒜皮的温馨 我都想藏起来。人生的意义是什么？是在生命里偶尔感到超出人的一些部分。一无所有来，一无所有走。中间的过程里，说“失去”都是太抬举自己，借来的、还回去，摊开手心，紧握拳心，会心一击。——春夏决定我们是什么人的是：在本可以什么都不做的时候，你在做什么？几时归去，作个闲人。对一张琴，一壶酒，一溪云。 ——苏轼 行香子·述怀人易老，事多妨，梦难长。一点深情，三分浅土，半壁斜阳。 ——汤显祖情不知所起，一往而深，生者可以死，死者可以生。生而不可与死，死而不可复生者，皆非情之至也。 ——汤显祖被酒莫惊春睡重，赌书消得泼茶香。当时只道是寻常。 ——纳兰性德《浣溪沙》十步杀一人，千里不留行。事了拂衣去，深藏身与名。 ——李白《侠客行》从前幽怨应无数。铁马金戈，青冢黄昏路。一往情深深几许？深山夕照深秋雨。 ——纳兰性德《蝶恋花·出塞》一生一代一双人，争教两处销魂。相思相望不相亲，天为谁春? ——纳兰性德《画堂春·一生一代一双人》人生若只如初见，何事秋风悲画扇？等闲变却故人心，却道故人心易变。 ——纳兰性德出了这个门，有人遭遇风雪，有人逢着彩虹；有人看见虎狼，有人逢着羔羊；有人在春天里发抖，有人在冬天里歌唱。浮沉烟云，总归幻象。悲苦是蜜，全凭心酿。 ——迟子建“如果顺利的话，我会买一个公寓，养一只柯基，一只英短，孤身一人，自由且满足地度过余生。” “若是不顺呢？” “结婚生子”。多数的日子平淡无奇，灵光的颜色往往不暖。丑比美更容易散播，因为丑不需要灵魂。为了有趣而有趣，不有趣；辛于平凡的平凡，不平凡。心中萧瑟，世界就成灰色，心怀旷野，哪里都是山河。做你自己，然后去承受你为个性而付出的代价。所有人都在和所有人喝茶吃饭，往往来来，没有尽头。不被爱着并不是你的错 你需要看到这些创伤 然后，试着做你自己。爱自己是终身浪漫的开始。自信的状态是，别人怎么贬低自己都觉得放你妈的狗屁。人人情有可缘，谁也不正确。一个人，欺负最多的，往往是身边的亲人，因为开罪别人可能会让自己失去很多，而得罪这些人，可以没有一点成本。小事要忍，大事要狠，没人扶的时候自己要站稳。路是走出来的，越低谷的时候越要撑起自己，要赢得起也要输得起。一直在学走路，总有一天会站起来。外面的雷雨愈发振作，屋内的桌椅茶杯更是安宁。要是在暮春时节，看满山暴雨打落花，一定很热闹。]]></content>
      <categories>
        <category>拾句</category>
      </categories>
      <tags>
        <tag>惊艳</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[杂记之孕事]]></title>
    <url>%2Fposts%2Fa28039a0%2F</url>
    <content type="text"><![CDATA[记录这个的缘由，也不是为了做什么，而是我自己发觉我的很多观念已经发生了变化，特别是关于婚姻、家庭……目前还处于比较混乱的状态，做此篇记录是为以后做准备，以后梳理起来会方便很多。正如谚语所说，罗马不是一天建成的(Rome was not built in a day)，观念也不是一下子就定型的，是一个不断变化的动态过程，甚至是一个打破重建的过程。我不敢保证我的观念一定正确，但是我会一直保持开放的态度。如果有可能，我很愿意沟通，甚至做出改变。最差的情况：即便我不愿接受，我也会给予足够的尊重。此篇作为杂记记录系列的第一篇，希望能一直做下去。现在的部分女生为什么不想生孩子？ 开始2019-06-07👤 知乎匿名用户 | 对女孩子忠告(34k👍)只是想对那些被外人催生的女孩子说：没有任何事情比你自己更重要如果你觉得生孩子会让你很有压力，那就不要去受这场折磨！他们上下嘴皮子碰了碰，都磨不掉痒劲，你要为了这群看客去怀胎十月，受累二十年？遵从自己的感受，你有什么可怕的？怕流言蜚语？怕被戳脊梁骨？你生了，他们就没有谈资了？？论人是非者，定是是非人！求求你们，勇敢一点！和爱你并且懂得尊重你的人，一起幸福地活下去！如果孩子对你的生活是锦上添花，我为你即将成为一位伟大的母亲而祝福及致敬！但如果不是，那就量力而为，不要生了痛苦/后悔！知乎匿名用户现在的部分女生为什么不想生孩子？2019-06-15👤 知乎北斗师兄 | 职业教育，有趣的小老师 | 对要孩子持保留态度(12k👍)说实话，作为一个男的，我也不想要孩子。因为我太怕自己有了孩子以后会变得跟我爸妈一样，把自己的整个人生全部寄托和希望都放在孩子身上。我爸妈的生活里只有我和我姐，他们的开心，面子，和动力全在我姐和我身上。有了我们俩之后的人生就完全失去了自我的概念，而完全都是为了我们而活。以至于现在他们年纪大了，把所有的期待都压在我身上，他们不觉得生活是自己的，他们认为自己老年最美好的生活是:儿女工作稳定，成了家，生了子，他们能够发挥余热帮忙带孙子。我绝不否认有了孩子依然能精彩的过一生，我也非常尊重很多人认为有了孩子人生才算完整这样的价值观，但我也深知受原生家庭的影响，我的性格和骨子里刻上了太多古板的东西和父母的影子。如果我有了孩子，会带着他们的影子一不小心就失去自我。我也就活这一次，懵懂少年生活里只有父母，成年之后尚未看够这世界的花样，我不想就草草的把自己的人生交给孩子。我也完全不认为自己的精神需要靠一个孩子作为寄托，老了需要依赖一个孩子来养。我希望我能按照自己的意愿体会更多的选择和可能。知乎北斗师兄www.zhihu.com/question/326634942/answer/7064176932019-06-23👤 知乎海螺面包 | 临床医疗，重症医疗学科 | 现场百态(6.2k👍)1.产妇a在床上疼的死去活来，大喊着要剖宫产，我征求了其他家属的意见，婆婆拉着儿子说 剖什么剖啊，剖宫产的小孩哪有顺产的聪明？我内心os：就您那不聪明的基因蛋孵出来也不能聪明了好么…2.产妇b生产后痔疮脱出肛门，主任直接一指禅捅了回去，还让产妇的老公戴着手套接手继续捅2个小时保证回纳成功。3.产妇c刚下手术，一个类婆婆样的中年女性飞奔到床边大喊，有奶了吗！？？？啊？？怎么还没有奶？！！！那我孙子怎么办啊？？？！4.G4P3（怀了4次生了3个）产妇d的老公和她自己都是智力障碍患者，她产后大出血、心力衰竭，住了一天icu老公就不肯积极治疗了。现在9岁的大宝在照顾新生儿和另一个在襁褓里的弟弟。5.剖宫产术后杜冷丁成瘾的产妇e以后该怎么办呢。6.剖宫产前医生是要把男方家属拉来谈话，反复告诉他们子宫只是一个器官，而我们只会优先抢救产妇，希望你们在签字的时候不要犹豫耽误时间。抖音上常看到在产房外捧着花焦急等待的老公，可我看到的全是事不关己在产床旁打王者农药的男人。也许有好的，但是极少吧。有些人玩游戏也就罢了，老婆疼的死去活来的还在说风凉话。“你都当妈了还怕疼？”“谁生孩子不这样，怎么就你娇气？”“那剖宫产多贵啊！”每个人怀了孕躺在那张产床上就不再是一个能把自尊放在首位的人了吧，压力性尿失禁，耻骨分离，再也无法恢复的身材和满肚皮的妊娠纹，真的每个人都能有如此的奉献精神么？20～30岁是生育黄金期，但是人为了什么而孕育新的生命这个问题，年轻人真的能想明白吗?知乎海螺面包现在的部分女生为什么不想生孩子？2019-07-10👤 知乎榛禾木 | 零售 | 丁克亲答(30k👍)1、我们不喜欢小孩，讨厌小孩，嫌小孩麻烦。对待小孩没有耐心，听见婴儿啼哭和小孩尖叫也会很烦躁。出去吃饭遇到奇葩的熊家庭，老婆也会发发朋友圈抱怨，借此也让催生的人看看我们的态度。我们承认的确有教育得出色的孩童，不过就像遇见别人家漂亮的小狗一样，我也许愿意摸，愿意玩，但自己不愿意养。对孩子也是如此。2、不接受目前流行的生育观。生孩子已经变成了“别人家生了，我们家也应该有”，或者“时间到了，应该要生了”的事。如果不生，最多说不生孩子的女人是不完整的女人，左耳进右耳出。在我们当地，如果生了一个，大概率还会被催生二胎。生了以后两边父母很难做到完全不插手，各种神秘不可言说状掏出来“为你好”的民间偏方，油腻的不放盐的汤水，奇葩的月子禁忌和月子餐，育儿观冲突下增加的矛盾。老婆有大量的适龄同学朋友，这样的例子多得已经看到麻木，女性生孩子十个月脱一层皮，养孩子十个月又是脱一层皮，男人能有什么损失，该上班还是上班，最多晚上被起夜喂奶的老婆带醒了。3、不愿意牺牲家人的生活质量。我俩的收入尚可，每年纯消费20万以上在这个包邮区的二线城市已经让自己过得很舒服，自住市区的联排，两边父母还有市郊景区的独栋别墅和市区的公寓，均无贷款，目前的生活水平我们都已满足。父母已经退休，我俩也无非几十年好光景，只想珍惜身边人，照顾父母度过舒适的晚年，不啃老，不让他们带孩子，也不至于生病时自责影响后辈的生活，所有的财产都能用在自己身上，无论养老还是救命。我们也是善良的人，如果有孩子，也会呵护他成长，在他18岁前尽到家长的责任，18岁后提供适当的辅助。但既然选择丁克，自然也没法在一个根本不存在的，虚无的“孩子”上产生感情，为他奉献。就算这是自私吧，我牺牲了一个薛定谔的孩子，只想和在世的家人走完一生。4、害怕生育风险。老婆是个胆小的人，怕疼，怕死，怕变丑，怕很多。她不想生，正好我也不想要，就这么简单，我可做不出逼迫老婆传宗接代的事。不生孩子的老婆还保持少女模样，脸上满满的胶原蛋白。出去吃个烧烤，穿连衣裙扎着双马尾手平放在桌上，扑察扑察眨着大眼睛等吃的，店主说：“老板带女儿出来吃烧烤啊？”把我老婆乐了一天。生育前后未知的变数，我们不想承担。看到朋友带小孩看病，这个发烧那个感冒的，陪床的过程都觉得心累。我自认从小已经是不让家长操心的孩子了，但也是生过病的人。当我肝囊肿住院开刀时，我爸面对手术风险同意书拿着笔呆滞了5分钟，他后来说很怕养了20年的孩子就这么没了，还哭了。我们不想面对无力掌握的伤心事，情愿从源头上断了这个可能。5、不想变成自己讨厌的那种人。老婆说以前某些挺正常的同学，还跟她玩得挺好的，一生完孩子，智商都好像生掉了。有在朋友圈里每天打卡乳头堵不堵的；有辞了教职闲在家里带孩子做“直销”，直播给亲儿子吃她代理的“产品”证明安全有效的；有隔了几百公里咸吃萝卜淡操心教育我们不该养猫，应该生孩子的。老婆亲戚家的女孩，饭桌上用手抓菜，敲碗碟，尖叫，一桌子大人不制止还要笑眯眯地哄，养而不教，养来何用。这是做人太假还是做人太傻。以我俩养猫时百般溺爱，把猫宠上天的情形来看，我们也是失败的父母，也有几率变成那样的人，还是不趟这水了。6、见过太多孩子让人寒心的事，更坚定养老靠自己的信念。仅仅我俩的家族里，就出了好几个例子。有搞直销，让患尿毒症的亲妈每月花6000元问她买产品喝来治病的表姐，我姨妈去世前身上只有2000元了。有参与诈骗，全家还几百万债的远房弟弟，连75岁的老奶奶都要接活计给孙子还债。有考上公务员，傍上小老板家女儿，逼爸妈掏空全部积蓄买房，然后不理睬他们的另一个弟弟。有酒后骑电动车撞了脑袋后瘫痪的堂哥。也有理所应当地女儿一出生就养在爸妈房里，现在大了就占了房子，和妻女住，让爸妈在附近租房的上海弟弟。老婆的外婆要住进养老院，三个舅舅都不愿出钱，还是我岳母出的钱。这样活生生的例子里，中老年的父母半生都勤劳温和，可以说都是好人，在一夜间失去了所有，眼神呆滞好像梦里，恰恰是这些身上掉下的骨肉，从小到大有礼貌的乖孩子，给了他们意想不到的彻底一击。我知道有人急着反驳这条，说大多数子女还是好的，但那是别处的事，并不改变以上已经客观真实发生了的事，对我们选择造成的负面影响。7、我和老婆从大学恋爱走到现在，十年来一直是黏在一块的，也是彼此的初恋。现在一起做生意也是并排坐着，白天夜晚24小时都不分离，与多数各自上班的夫妻真实相处时间来比较，我们算是结婚20多年了。过年也没有各自回家的说法，向来同手同脚行动，每天有说不完的开心话，在家也要亲亲抱抱举高高，出门就是手拉手走。我不烟不酒，她不施粉黛，我俩的脾气性格三观品味都极其相似，彼此爱慕尊重，可以参考我的签名。对我们来说感情已经到了高度，不需要依赖生孩子来维系婚姻，更不需要二人世界里出现一个不稳定因素。我们都不愿意因为培养孩子时难免的心急心切，分歧争执，破坏夫妻感情。8、阶层固化之下，一代胜一代的希望越发渺茫，家家户户都在拼了命送孩子往上爬，但我觉得大多数将来只能依靠父母的遗产留在现有阶层里。因为工作关系我经常接触各类学校，老师和家长，给我的总体感觉就是累，那种被逼着集体忙碌的无力感，为了孩子创造更多有利条件的紧迫感，和一件耗费时间精力巨大的工程开了头不得不继续下去的压力感。像打怪升级一样，25年后感觉到顶级了，系统又给开了新的25年的带孙子关卡。我和老婆都是清高心傲的人，不想同“宝妈宝爸”们一样甘愿付出，不愿屈服于某个设定。9、我俩都是独生子女，并且除了父母对其他亲戚血缘十分淡漠，也没有家族传承的旧观念和传宗接代的使命感，同时也是无神论者。对于什么绝后，断代的言论只会觉得无聊无趣，信则有不信则无，仅仅往上数四代的老祖宗，我不认识他，他不知道我，有了后代又怎样，我只是个普通人，几代以后连名字都湮灭了。我一生奉公守法爱国爱家，灾荒捐过款，街边救过猫，已经对得起家人和自己的良心，又不为别人而活，也无惧别人的妄言。10、我的父母，她的父母，都同意了我们丁克。我爸说他17岁开始当兵，半生为国半生为家，都没有好好为自己过，希望我和老婆怎么开心怎么过。岳父母曾经催生过，老婆态度坚决，我又和她一个鼻孔出气的，慢慢想通了也就作罢。如今家宅安宁，大家欢喜，我爸妈打牌炒股旅游钓鱼，也很疼爱她。她爸妈也很疼我，还养了个胖橘公猫当小儿子养，早上会叫它“去喊姐姐起床”，然后小舅子来挠门。一大家6个人照样开开心心过，老人不用带小孩，60岁的人精神气质都像年轻了十几岁。他们大把的退休金都能花在自己身上，也能有个安定轻松的晚年，还生劳什子孩子。知乎榛禾木现在的部分女生为什么不想生孩子？现在的部分女生为什么不想生孩子？ 结束(这个问题回答摘录至此告一段落，以后可能会有修改更新，更多回答可以参看知乎)2019-07-14👤 一叶舟 | 心理学本硕，国家二级咨询师这周我将正式迈入孕37周+的大门，足月了，要随时准备好发动了。我那个朴实无华的老公，正穿着大裤衩吭哧吭哧地收拾着待产包，有一搭没一搭地跟我聊着天。我笑话他耷拉着的那点肚腩，是二胎爹的幸福肥，要他仔细着别弯腰憋出了屁。他回应我的是老大今天还没拉臭，要不要给喂点西瓜汁。看着他仔细地在大包的侧兜里塞进了两小瓶开塞露，我突然一下涌出了眼泪。也是，只有他收拾待产包，才会知道我要用到什么。生老大时，大夫交代顺产之后必须尽早排尿排便，以免引起尿液滞留，导致类似于子宫移位乃至出血的可怕事情。护士还要求，产后第一次的尿液要接在盆里，等她们来检查。于是我老公就端着尿盆蹲在卫生间里，吹着口哨，放着水龙头，等我排尿。进出卫生间三次之后，终于“哗啦”一声，完成任务，我俩不自觉地捏了下对方的手，相视一笑，像是什么大事成功了一样。那时我想起我们恋爱时第一次一起外出，在宾馆的卫生间里我尴尬地满地转圈，因为我怕尿出来呼啦啦的声音影响了我精心打扮出的女神形象。一叶舟 | 曾奇峰心理工作室穿越了“屎尿屁”之后，我们是什么样的伴侣？]]></content>
      <categories>
        <category>生活杂记</category>
      </categories>
      <tags>
        <tag>孕事</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[趣味生活简史]]></title>
    <url>%2Fposts%2F61505f7b%2F</url>
    <content type="text"><![CDATA[行至衣食住行处 坐看世事风云起内容简介本书是《万物简史》作者最新扛鼎之作、其创作灵感源自作者一次石破天惊的发现:房屋不是躲避历史的避难所、而是历史的最终归宿。在作者看来，无论世界上发生了什么，不管人们发现了什么，创造了什么，或激烈争夺了什么，最终都会以这种或那种方式投射到你的家里。战争、饥荒、工业革命、启蒙运动……这些看似与我们相距遥远的历史或许就隐藏在你的沙发里和五斗橱里，在你窗帘的皱褶里，在你松软的枕头里，在你家墙上的油漆里，在你家的自来水管道乃至抽水马桶里。于是，作者拿定主意要在自己的房屋里转转，他要在不出家门的情况下引领我们做一次有关世界历史的美妙远足。在作者的生花妙笔之下，卫生间是一部个人卫生的历史，厨房是一部烹调的历史，卧室则成了一部爱情、死亡和睡觉的历史。作者还梳理了从建筑学到电力学，从考古学到园艺学，从食物贮藏到流行病、从香料贸易到埃菲尔铁塔，从女性时装到室内装潢等方面的演变脉络，撰写了一部包罗万象的人类居家生活简史。作者以饱满的好奇心、绝妙的智慧心，独具一格的叙事腔调将《万物简史》脸炙人口的风格延续至本书的字里行间，成就了这部思想性与趣味性兼具的神奇之书。作者简介👤 比尔·布莱森，享誉世界的作家。1951年出生于美国艾奥瓦州，后定居英国，曾任职于《泰晤士报》与《独立报》，同时也为《纽约时报》、《国家地理杂志》等刊物撰文。2005年，他被任命为英国久负盛名的杜伦大学校长，并且被众多大学授予荣誉学位。2006年12月，为表彰他在文学上的杰出贡献，英国女王伊丽莎白授予他大英帝国官佐勋章（OBE）。布莱森擅长用不同的眼光来看待他所游历的世界，在他的书里，英国式的睿智幽默与美国式的搞笑绝妙地融合在了一起。他的尖刻加上他的博学，让他的文字充满了幽默、机敏和智慧，使他自己成为“目前活在世上的最有趣的旅游文学作家”（《泰晤士报》）。目录第1册前言当你从一个崭新的角度来观察一个你非常熟悉的世界时，你心里总是觉得很兴奋。第一章 | 现代生活的序幕以1851年5月1日在伦敦开幕的“万国工业博览会展览馆”为标志,现代生活的序幕由此拉开,电灯、电话、电报、抽水马桶、麻醉术、室内管道、煤气照明、制冷、汽车、飞机、摩天大楼如雨后春笋般冒出来。突然之间,有史以来第一次,在大多数人的生活当中什么都不缺，到处是一片生机勃勃的景象。戴维·坎那戴恩写到，到世纪之交的时候，“一代精英都不在教堂内而在教堂外”。第二章 | 居家的气息从古罗马人洞穴到普通住宅再到现代豪宅，居家生活的历史就是一部不断追求舒适的历史。你也许会有点吃惊地想到，对于这栋房子或任何其他房子来说，没有哪个部件的出现是必然的。一切都得经过思考——门呀，窗呀，烟囱呀，楼梯呀——其中许多经过了长时间的试验，比你想象的时间还要长得多。在最初99%的历史里，人类没有干多少事，除了繁衍后代，生存下来。从植物中获取食物是一项艰苦的工作。把小麦、稻谷、玉米、大麦和其他草类转变成主食是人类历史上一个伟大的成就，但也是一个意料之外的成就。这一切又使我们想到，我们对古人的生活方式和习惯知道得如此之少，甚至连想象都不敢想象。带着那种想法，我们终于要走进房子，并开始认识到，我们对里面的事情也是知道得如此之少。第三章 | 门厅没有哪间屋子的地位在历史上落得比门厅更靠后。门厅现在是擦鞋底、挂帽子的地方，而曾经却是住宅里最重要的屋子。直到烟囱问世，使得房子一层一层往上发展成了可能，从那之后，人们开始有了隐私和个人空间的概念，而房间的空间拓展正是建立在人们对效用和隐私不断改变的看法之上的。生活很艰难。在整个中世纪，每个人在一生中要把相当多的时间完全用来求生存，饥荒是司空见惯的。中世纪的世界是个没有储备的世界。第四章 | 厨房值得注意的是，维多利亚时代的人的胃口其实还是比较克制的。暴饮暴食的黄金时代，实际上是在18世纪。那是约翰牛时代，是有史以来哪个国家也没有创造出过的面色最红、吃得过多、随时会得冠心病的形象，为的是给别的国家留下个好印象。在18世纪的最初10年里，英国历史上两位最胖的君主花了大量的精力来吃，这也许不是偶然的。这类事情吸引报界的注意力，恰恰说明它们是个别事件，而不是惯常现象。令人感到意外的是，在很长时间里，开罐头仍是个严重的障碍。杰斐逊在食物方面还是个伟大的冒险家。他有许多别的成就，其中，他在美国是把土豆切成长条进行油炸的第一人。无法掌握自己饮食的人也往往确实吃得很差。许多比较穷的人的饮食是相当单调的。第五章 | 洗碟间和食品库在住宅的设计过程中，越来越注意把仆人挡在看不见的地方，与主人家隔开一段距离，除了绝对需要以外。厨房刚够放一张桌子和两把椅子，连在一起的洗碟间和食品库的空间更小，因为很大程度上那里是仆人们的天地。这无疑是个很怪的世界，仆人构成了人类的一个阶级，从根本上说，他们的存在是为了确保人类的另一个阶级在想要什么时，几乎马上就能伸手拿到什么。仆人构成了人类的一个阶级，从根本上说，他们的存在是为了确保人类的另一个阶级在想要什么时，几乎马上就能伸手拿到什么。仆人们做了所有这一切，受到的待遇往往是很可怕的。主人可以摆布仆人，仆人也同样可以摆布主人。第2册第六章 | 保险丝盒我们忘了，在发明电以前，世界上的光线是多么暗淡。一支蜡烛—支好的蜡烛—所提供的照度，勉强相当于一盏100电灯1%的照度。打开你家的冰箱门，里面射出的光比18世纪大多数家庭享有的光的总和还多。在历史的大部分时间里，夜晚的世界确实是个很黑暗的地方。他们开始制造容量为40加仑的专用油桶。直到今天，这种桶仍然是石油的标准计量单位。煤气灯提供极好的总体照明。它使阅读、打牌甚至交谈更加惬意……人们看书看得更多，睡觉睡得更晚。技术进步提高了光的质量，但也增加了火灾的风险。在最初几年里，没有人会想到插头和插座。因此，任何家用电器都必须直接接到系统上。爱迪生的天才并不在于发明了电灯，而在于创造了以商业规模生产和供应电灯的方法。而后者是一项大得多的、更富于挑战性的事业。第七章 | 起居室若要领会舒适的家庭生活的精神，没有哪里比得上个有着奇特名字的地方:起居室(drawing room)这个词是一个古老得多的词 withdrawing room的缩略形式，意思是“一处家人可以离开家里的其他人以享有更多隐私的空间”。这个词根本没有在英语里完全扎根和得到广泛使用，到14世纪中叶，除了在最上流的社会里以外，这个词被sitting room取而代之。第八章 | 餐厅出现餐厅的原因，不是大家突然想要在一个专门的地方吃饭，总的说来是由于家里女主人的一个简单的愿望，她不想让漂亮的装有软垫的新家具沾上油污。我们最近发现，这类家具价钱很贵，得意的主人不愿意看到任何人在上面擦手指。餐厅的到来标志着一种变化，不仅是摆饭地方的变化，而且是吃饭方式和吃饭时间的变化。人体需要维生素和矿物质，这是一门学问，要过相当长的时间才搞明白。即使今天，要是你开始掉头发，或者脚踝肿的厉害，你首先想到的不大可能是最近吃了什么，你更不会想一想你没有吃什么。饮食不当不光是坏血病的原因，也是一系列普通疾病的原因，认识到这一点是个相当缓慢的过程。维生素K跟字母顺序毫无关系。它之所以叫维生素K，是因为发现这种维生素的人、丹麦的亨里克·丹根据它在血液凝结过程中的作用，管它叫”凝血维生素(Koagulations vitamin)“。泛酸和生物素这两种维生素没有数字编号，这很大程度上是因为它们从来没有给我们制造过麻烦。氯化钠是一种很怪的物质，它由两种及其活跃的元素组成：氯、钠。钠和氯是矿物界的地狱天使，然而氯化钠却是一种无毒的食用盐。没有香料死不了人，但为了香料死了好多人。制造商做了实验，增加了齿尖的数量——有时候多大6个——最后在19世纪末确定为4个，因为4个齿尖的叉子人们用起来似乎最自在。过去人们的大部分卡路里都是在早餐时间和中午摄入的，晚餐时间只是补充少量食物，然而现在，那样的摄入方法几乎完全颠倒了过来。第九章 | 地下室原先，地下室主要用作存放煤的地方。今天，里面放着锅炉、不用的衣箱、不合时节的体育器材以及许多贴了封条的纸板箱。那些箱子几乎永远不会再打开，但每次搬家都要小心翼翼地从一栋房子搬到另一栋房子，认为有一天会有人想要一些已经在箱子里放了25年的要儿衣服。它不是个很合意的场所，但也有个补过的优点:让你了解一点房子上层建筑的情况。通过阅读、咨询、凭借灵感进行的实验，他们成功地设计并监督完成了新大陆有史以来最伟大的工程，他们成为历史上第一批通过开掘运河来学会怎么开掘运河的人。第3册第十章 | 过道过道是寓所里最不合意、最阴暗的地方，因为它没有窗户，必须借助从邻近房间开着的门里透进来的任何自然光线。靠近过道中间的地方，有一扇可以关的门——在早先的年代，这门无疑是关着的——把住宅的服务区和对面的私人区分隔开。房子完工的时候，不可能有它。它显然是为了放置在1851年还没有的某种东西才设计的，而那个东西将会改变世界，改变的速度将超出任何人的想象。第十一章 | 书房虽然“书房”这个名字使它听起来像个了不起的地方，但实际上只是个名字好听的贮藏室而已，即使在天气暖和的月份里，里面也是又暗又冷，你都不想在里面久留。如今，书房是旧家具和旧画片的最后避难所—这些东西夫妻的一方十分欢，另一方却乐意看到将其付之一炬。我们现在去那里的理由几乎只有一条，那就是检查一下捕鼠夹。很有可能，历史上爆发的最严重的鼠疫似乎跟大家鼠毫无关系，至少在英国是这样。很少有人喜欢蝙蝠，这确实是很不幸的，因为蝙蝠干的好事要比坏事多得多。世界上的蝙蝠数量，要比大多数人知道的多得多。实际上，全部哺乳动物种类总共大约1100种，其中大约1/4是蝙蝠。从大小方面说，小到熊蜂蝙蝠——名副其实，它们不过熊蜂那么大，因而是最小的哺乳动物，大到澳大利亚和南亚的翼展达6英尺的巨大狐蝠，应有尽有。哪里的事态都有可能变得越来越糟，而且糟得多。第十二章 | 花园对于许多人来说，今天所谓的园艺就是草坪，几乎不指任何别的东西。美国的草坪所占的面积为5万平方英里，超过了任何一种农作物。家庭草坪里的绿草要做的事，和自然界的野草是一样的，那就是长到大约2英尺高，开花，枯黄，死亡。对于我们大多数人来说，养一个漂亮的草坪，几乎是我们所干的最不绿色的事情，这是极具讽刺意味的。任何形式的侵入他人地界，不管多么无辜，多么轻微，势必会被看成是恶意的。对我们大多数人来说，养一个漂亮的草坪，几乎是我们干的最不绿色的事情，这是极具讽刺意味的。第十三章 | 紫色屋把它叫作紫色屋没有别的理由，只因为我们搬进去住的时候，那间屋子的墙壁是漆成那种颜色的。在原先的图纸上，它本来标着“客厅”两个字，但后来在调整的过程中把那个重要房间移到了隔壁。在那次调整中，仆人们没了拟建的“配餐室”，而给了马香先生一间宽敞的餐厅。不管叫什么名字，反正这间屋子是打算用作一种客厅的，很可能是用来接待喜欢的客人。实际情况并不是那样一丝不差的，建筑风格不会仅仅因为一位君主的死去而改变，也不会因为一个朝代很长而保持不变。它是世界的最后一栋房子，它的前面是一块未经探索的大陆，它的背后是整个已知的世界。这栋房子背向那个旧世界，眺望那个空荡荡的未知的新世界。实际上什么东西都得从一个远方的代理商那里订货。什么要求都得说得清清楚楚，但最终你还得依赖一个陌生人的判断力和诚实的服务，让人失望的可能性是很大的。第十四章 | 楼梯现在，我们来到了这栋房子里最危险的部分。实际上，无论在哪里，这都是最可能出现险情的环境之楼梯。谁也不知道楼梯到底有多危险，因为说来也怪，这方面的记录很少。据最保守的统计，在造成偶然死亡的最常见的原因当中，在楼梯上摔倒排在第二位，落在车祸后面，但遥遥领先于溺死、烧死和其他可怕的不幸事故。楼梯的安全问题不是一个而是两个问题：“要避免引发事故的情况出现；要设计这样的楼梯：万一发生事故时，能把伤痛降低到最低程度。”虽然白色在整个19世纪不断地有所改善，但直到20世纪40年代，由于在涂料里添加了氧化钛，才有了真正鲜亮和耐久的白色。……耐久的深黑色颜料是从焦油和沥青中提炼出来的，19世纪末以前还不容易弄得到。现在，我们可以走上楼梯，来到一个房间。它也许从来没有真正毒死过什么人，但它很可能是带来痛苦和绝望的地方。它所带来的痛苦和绝望，要超过家里所有别的房间所带来的痛苦和绝望的总和。待继续……]]></content>
      <categories>
        <category>读书笔记</category>
      </categories>
      <tags>
        <tag>趣味生活简史</tag>
        <tag>历史</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[体重记录]]></title>
    <url>%2Fposts%2Fe93199a0%2F</url>
    <content type="text"><![CDATA[var myChart=echarts.init(document.getElementById("echarts8776")),option={tooltip:{trigger:"axis"},title:{show:!0,text:"日常体重记录"},legend:{data:["体重"]},toolbox:{show:!0,orient:"horizontal",x:"right",y:"top",color:["#1e90ff","#22bb22","#4b0082","#d2691e"],backgroundColor:"rgba(0,0,0,0)",borderColor:"#ccc",borderWidth:0,padding:5,showTitle:!0,feature:{mark:{show:!0,title:{mark:"辅助线-开关",markUndo:"辅助线-删除",markClear:"辅助线-清空"},lineStyle:{width:1,color:"#1e90ff",type:"dashed"}},dataZoom:{show:!0,title:{dataZoom:"区域缩放",dataZoomReset:"区域缩放-后退"}},magicType:{show:!0,title:{line:"动态类型切换-折线图",bar:"动态类型切换-柱形图",stack:"动态类型切换-堆积",tiled:"动态类型切换-平铺"},type:["line","bar","stack","tiled"]},restore:{show:!0,title:"还原",color:"black"},saveAsImage:{show:!0,title:"保存为图片",type:"jpeg",lang:["点击本地保存"]},myTool:{show:!0,title:"自定义扩展方法",icon:"image://../asset/ico/favicon.png",onclick:function(){alert("myToolHandler")}}}},calculable:!0,dataZoom:{show:!0,realtime:!0,start:20,end:80},xAxis:{type:"category",boundaryGap:!1},yAxis:{type:"value",min:60,axisLabel:{formatter:"{value} (kg)"}},series:[{name:"体重",type:"line",data:[{name:"2019-02-10",value:["2019-02-10",65]},{name:"2019-03-10",value:["2019-03-10",67.5]},{name:"2019-03-23",value:["2019-03-23",68.75]},{name:"2019-03-24",value:["2019-03-24",68.25]},{name:"2019-03-30",value:["2019-03-30",69.35]},{name:"2019-04-01",value:["2019-04-01",67.8]},{name:"2019-04-02",value:["2019-04-02",67.3]},{name:"2019-04-07",value:["2019-04-07",67.9]},{name:"2019-04-09",value:["2019-04-09",68.9]},{name:"2019-04-11",value:["2019-04-11",69.05]},{name:"2019-04-12",value:["2019-04-12",68.3]},{name:"2019-04-14",value:["2019-04-14",67.2]},{name:"2019-04-15",value:["2019-04-15",69.25]},{name:"2019-04-18",value:["2019-04-18",68.35]},{name:"2019-04-22",value:["2019-04-22",68.4]},{name:"2019-04-23",value:["2019-04-23",67.75]},{name:"2019-04-24",value:["2019-04-24",68.45]},{name:"2019-04-26",value:["2019-04-26",67.5]},{name:"2019-04-27",value:["2019-04-27",67.6]},{name:"2019-04-28",value:["2019-04-28",67.65]},{name:"2019-04-29",value:["2019-04-29",67.1]},{name:"2019-04-30",value:["2019-04-30",66.75]},{name:"2019-05-02",value:["2019-05-02",68.5]},{name:"2019-05-04",value:["2019-05-04",66.4]},{name:"2019-05-07",value:["2019-05-07",68.3]},{name:"2019-05-08",value:["2019-05-08",67.7]},{name:"2019-05-09",value:["2019-05-09",67.35]},{name:"2019-05-11",value:["2019-05-11",66.6]},{name:"2019-05-12",value:["2019-05-12",67.4]},{name:"2019-05-13",value:["2019-05-13",66.95]},{name:"2019-05-14",value:["2019-05-14",67.55]},{name:"2019-05-16",value:["2019-05-16",67]},{name:"2019-05-18",value:["2019-05-18",68.4]},{name:"2019-05-19",value:["2019-05-19",66.4]},{name:"2019-05-20",value:["2019-05-20",67.4]},{name:"2019-05-21",value:["2019-05-21",66.8]},{name:"2019-05-22",value:["2019-05-22",67.65]},{name:"2019-05-23",value:["2019-05-23",67.4]},{name:"2019-05-24",value:["2019-05-24",67.5]},{name:"2019-05-25",value:["2019-05-25",67.4]},{name:"2019-05-26",value:["2019-05-26",67.4]},{name:"2019-05-27",value:["2019-05-27",67.3]},{name:"2019-05-28",value:["2019-05-28",67.4]},{name:"2019-05-30",value:["2019-05-30",65.95]},{name:"2019-06-02",value:["2019-06-02",66.95]},{name:"2019-06-03",value:["2019-06-03",67]},{name:"2019-06-04",value:["2019-06-04",67.5]},{name:"2019-06-05",value:["2019-06-05",68.35]},{name:"2019-06-06",value:["2019-06-06",67.6]},{name:"2019-06-07",value:["2019-06-07",67.9]},{name:"2019-06-09",value:["2019-06-09",67.55]},{name:"2019-06-11",value:["2019-06-11",67.25]},{name:"2019-06-13",value:["2019-06-13",67.6]},{name:"2019-06-14",value:["2019-06-14",67.25]},{name:"2019-06-15",value:["2019-06-15",66.7]},{name:"2019-06-16",value:["2019-06-16",66.15]},{name:"2019-06-18",value:["2019-06-18",67.5]},{name:"2019-06-19",value:["2019-06-19",65.55]},{name:"2019-06-22",value:["2019-06-22",67.5]},{name:"2019-06-23",value:["2019-06-23",66.8]},{name:"2019-06-26",value:["2019-06-26",67.55]},{name:"2019-06-28",value:["2019-06-28",66.75]},{name:"2019-06-29",value:["2019-06-29",66.2]},{name:"2019-07-03",value:["2019-07-03",68.45]},{name:"2019-07-05",value:["2019-07-05",68.35]},{name:"2019-07-07",value:["2019-07-07",67.75]},{name:"2019-07-08",value:["2019-07-08",69.2]},{name:"2019-07-10",value:["2019-07-10",68.75]},{name:"2019-07-11",value:["2019-07-11",68.15]},{name:"2019-07-13",value:["2019-07-13",67.95]},{name:"2019-07-15",value:["2019-07-15",62.3]},{name:"2019-07-16",value:["2019-07-16",68.05]},{name:"2019-07-17",value:["2019-07-17",67.35]},{name:"2019-07-18",value:["2019-07-18",67]},{name:"2019-07-19",value:["2019-07-19",62.35]},{name:"2019-07-21",value:["2019-07-21",66.95]}]}]};myChart.setOption(option)]]></content>
      <categories>
        <category>日常生活</category>
      </categories>
      <tags>
        <tag>体重</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[更新记录]]></title>
    <url>%2Fposts%2F77b56474%2F</url>
    <content type="text"><![CDATA[时间更新说明2019-07-13内容补充：更新记录2019-07-13功能添加：点击效果2019-07-05功能优化：博客链接2019-07-03内容补充：关于我2019-07-02功能添加：网站运行时间2019-07-01功能添加：文字统计、阅读时间统计2019-06-25功能添加：Hexo博客初始化。]]></content>
      <categories>
        <category>Muhouer&#39;s blog</category>
      </categories>
      <tags>
        <tag>更新记录</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[Hexo博客SEO优化之链接优化]]></title>
    <url>%2Fposts%2Fa8db5a9b%2F</url>
    <content type="text"><![CDATA[写在前面默认的permalinkpermalink: :year/:month/:day/:title/缺点如下命名方式层次过多，爬虫会嫌麻烦。对于中文命名，如果要引用自己的链接，会重新编码成好长一串，超级麻烦。中文链接在百度Google权重很低。解决办法有没有其他办法呢？实在想不出来了，还是因为我比较懒，喜欢现成的。皇天不负有心人，通过一番搜索，终于找到一个插件hexo-abbrlink。注意之前如果有做评论或访问计数配置的，会全部失效,一切重头开始。hexo-abbrlink实现思路对标题+时间进行md5然后再转base64，保存在front-matter中。如何安装添加插件到hexo:1npm install hexo-abbrlink --save修改config.yml文件中的永久链接：1permalink: posts/:abbrlink/ # “posts/” 可自行更换两种设置：alg - 算法（）rep - Represent（生成的链接可以以十六进制或十六进制值表示）1234# abbrlink configabbrlink: alg: crc32 # 算法(Algorithm):目前支持crc16和crc32，默认为crc16 rep: hex # 表示(Represent):生成的链接可以以十六进制或十进制值表示，默认十进制示例生成的链接如下所示:12345crc16 &amp; hexhttps://post.zz173.com/posts/66c8.htmlcrc16 &amp; dechttps://post.zz173.com/posts/65535.html12345crc32 &amp; hexhttps://post.zz173.com/posts/8ddf18fb.htmlcrc32 &amp; dechttps://post.zz173.com/posts/1690090958.html局限性crc16的最大帖子数为65535。(对于个人博客网站，这个数字还算不错)更多信息hexo-abbrlink介绍参考资料https://github.com/Rozbo/hexo-abbrlink#limitation]]></content>
      <categories>
        <category>静态博客</category>
      </categories>
      <tags>
        <tag>hexo</tag>
        <tag>SEO优化</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[工作2年感悟]]></title>
    <url>%2Fposts%2Fd3b108fe%2F</url>
    <content type="text"><![CDATA[写在前面从2017年7月开始工作，至今已有2年。工作已是第二份工作，之前一直有思考，不过没有记录，以后要养成记录的习惯，这是个好习惯。……(太矫情，写完之后，中间部分全部删了🙃)最后以后在职场上一定注意：自信，一定要自信，即便你能力或技术不是很好。面子工作一定要做足，这样可以让你看起来很用心。不会的一定去查、去问，不能憋在那避而不谈。能利用的资源一定要利用，那样会节省很多不必要的力气。资历老说话就是好使、众人拾材火焰高。考核时别像上学时考试一样，孤军奋战，能提前查的就查，有考题答案就看，不然不过的话，影响自己的考核或晋升，多不划算。公司给的福利该享受的一定要享受，不要一味为公司考虑，为公司节省，本该如此。不能忘记学习、成长，工作不是你的全部，除了工作以外，一定要坚持学习，时间会证明：一点点成长最后会给你带来意想不到的收获。]]></content>
      <categories>
        <category>工作</category>
      </categories>
      <tags>
        <tag>感悟</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[使用GitHub搭建一个自己的hexo博客]]></title>
    <url>%2Fposts%2F9fe43db6%2F</url>
    <content type="text"><![CDATA[写在前面一直想搭建一个个人博客，无奈有拖延症，一直拖到现在。为什么开始做了呢？最近压力很大，为了防止乱花钱，给自己找点事做。于是，兜兜转转又回到搭建博客的事，来来回回看了很多静态博客(纠结症)，比如docsify、VuePress等等，最终还是选择了hexo，毕竟这也算是我静态博客的启蒙，不能忘本，第一个系列当然给Hexo.本地部署过程环境关于node、npm、git等的安装，在这里先不展开，以后抽空补上。安装 hexo 客户端1npm install -g hexo-cli创建hexo的文件夹(文件夹名称hexo可修改为其他)12cd hexo # hexo 改为自己命名的文件夹名称hexo init # hexo 初始化选择主题hexo本身自带 landscape 主题，不过个人觉得比较丑，改为了比较简约的next 主题。接下来主题均基于next主题下载主题1git clone https://github.com/iissnan/hexo-theme-next修改 theme编辑 hexo/_config.yml，找到 theme 那一行配置，修改为 next本地启动看看安装完之后，我们可以在本地启动看看博客初始化的效果。生成静态文件1hexo ghexo 最终运行的是静态文件，包括js，css和html等，这些文件统一放在 public 文件夹。安装 hexo-server1npm install hexo-server --save启动 server1hexo s在浏览器打开 localhost:4000，会看到一个 Hello World的页面。恭喜你，部署成功。添加“分类”，“关于”和“标签”菜单到此已经把博客安装好了，不过要想看起来更好点，还需要做些其他配置。取消 tags、about、categories 注释在主题配置文件next/_config.yml 在menu下去掉tags、about、categories 注释。创建 tags，about，categories在 hexo 文件夹下执行以下shell命令1hexo new page tags会在 source 文件夹生成 tags 文件夹，编辑里面的 index.md ，添加12type: &quot;tags&quot;comments: false安装同样操作即可添加 categories；添加about相对简单，不需要修改 md 文件的 type，因为tags、categories是特殊目录类型，about只是简单的一个 md。为文章添加标签和分类在文章 md 文件开头 title 的下面，增加类似，就可以归类到tag和 category123456789101112131415tags: #文章标签可，空，多标签请用格式[tag1,tag2,tag3]，如下，注意!!&quot;tags:&quot;后面有个空格tags: [tag1, tag2, tag3, ...]# 下面这种方式似乎仅限于hexo 3.0，应该包括以上吧...tags: - tags1- tags2- ...# 这种方式似乎仅限于hexo 3.0，应该包括以上吧...categories: - tags_level_1- tags_level_2- tags_level_3- ...添加头像图片在 hexo/_config.yml 找到配置 avatar，增加图片路径，注意图片类型要对的上。1avatar: /images/avatar.jpeg新建文章1hexo new post new1就会在 source/_post 文件夹下生成 new1.md 文件，编辑 md 文件即可。这里为什么是 post ？这里涉及 hexo 的模版行为，在 scaffolds 目录下初始定义了3个模板，draft、page、post，文章就是用到了 post。部署到Github本地服务起来之后，基本信息无误，可以先尝试部署到 GitHub 上，之后再慢慢迭代，总会变得更好！github上新建一个仓库登录github后，在界面右上角用户信息点击左边的加号，新建一个repository然后给新建的仓库起个名字，注意：这个名字必须跟用户名一致，github才会默认设置成用户的博客。必须选择public，否则即便部署完成访问也会404。将本地搭建好的hexo发布到github下面是在项目中生成静态文件的命令：1$ hexo generate简写，结果是一样的1$ hexo g执行完以上代码，会在项目的根目录下生成public文件夹安装插件1npm install hexo-deployer-git --save修改网站配置文件_config.yml,添加deploy信息1234deploy: type: git repo: git@github.com:muhouer/muhouer.github.io.git branch: master上面的repo的配置信息，替换成自己的项目名字设置SSH Keys先检查机器上是否已经存在id_rsa.pub文件1$ ls -al ~/.ssh不存在的话执行以下命令生成，一路回车即可。1$ ssh-keygen -t rsa -C &quot;xxxxxx@xxx.com&quot; # 改成自己的邮箱复制id_rsa.pub文件内容，在GitHub的 settings 中，点选 SSH keys，添加一个 key，将内容粘贴进去。测试是否添加成功，在刚刚的机器上输入，配置成功会有类似如下提示，至此本地跟远程github的连接已经建立1ssh -T git@github.com在项目中，直接生成静态文件，上传就可以了：123$ hexo clean //清除缓存文件db.json和已生成的静态文件public$ hexo g //生成网站静态文件到默认设置的public文件夹$ hexo d //部署网站到设定的仓库部署完成之后，访问 https://muhouer.github.io/ ,改成你自己的地址即可访问。小结以上就是在GitHub上搭建一个自己的hexo博客的大致过程，目前还是比较简单，接下来几篇将会记录一下next主题的相关配置以及文章美化方面的内容，以防记性不好，最近老是健忘。参考资料http://durant35.github.io/2016/07/16/hexo_hexo%E5%88%86%E7%BA%A7%E7%9B%AE%E5%BD%95%E4%B8%8E%E5%A4%9A%E6%A0%87%E7%AD%BE/https://github.com/hexojs/hexohttps://albenw.github.io/posts/3454819c/https://segmentfault.com/a/1190000018250408?utm_source=tag-newesthttps://www.cnblogs.com/kex1n/p/5229493.html]]></content>
      <categories>
        <category>静态博客</category>
      </categories>
      <tags>
        <tag>hexo</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[Hello World]]></title>
    <url>%2Fposts%2F4a17b156%2F</url>
    <content type="text"><![CDATA[Welcome to Hexo! This is your very first post. Check documentation for more info. If you get any problems when using Hexo, you can find the answer in troubleshooting or you can ask me on GitHub.Quick StartCreate a new post1$ hexo new "My New Post"More info: WritingRun server1$ hexo serverMore info: ServerGenerate static files1$ hexo generateMore info: GeneratingDeploy to remote sites1$ hexo deployMore info: Deployment]]></content>
  </entry>
</search>
